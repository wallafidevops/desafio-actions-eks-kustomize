name: Deploy no kubernetes
on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
        description: 'Nome ambiente'

jobs:
  deploy:
    name: Deploy no kubernetes
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    env:
      AWS_ECR_URI: 216989136189.dkr.ecr.us-east-1.amazonaws.com
      IMAGE_NAME: review-filmes
      BUILD_ID: ${{ github.run_number }}
      GIT_USER_NAME: wallafidevops
      GIT_USER_EMAIL: wallafisantos55@gmail.com
      ARGOCD_SERVER: argocd.app.wsnobrega.life
      ARGOCD_APP_NAME: review-filmes
      BRANCH_NAME: ${{ github.ref_name }}
    steps:
      - name: Checkout repositório atual
        uses: actions/checkout@v4

      - name: Instalar dependências (yq, argocd, kustomize, ssh)
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-client curl git yq
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd
          curl -sSL "https://github.com/kubernetes-sigs/kustomize/releases/latest/download/kustomize_v5.4.3_linux_amd64.tar.gz" \
            | sudo tar -xz -C /usr/local/bin kustomize

      - name: Configurar Git
        run: |
          git config --global user.name "$GIT_USER_NAME"
          git config --global user.email "$GIT_USER_EMAIL"

      - name: Clonar repositório GitOps
        run: |
          set -euo pipefail

          rm -rf desafio-actions-eks-kustomize
          git clone https://${{ secrets.GIT_USERNAME }}:${{ secrets.GIT_PASSWORD }}@github.com/wallafidevops/desafio-actions-eks-kustomize.git
          cd desafio-actions-eks-kustomize
          git fetch origin "$BRANCH_NAME" || true
          git checkout "$BRANCH_NAME" || git checkout -b "$BRANCH_NAME"
          git pull origin "$BRANCH_NAME" || true

          OVERLAY_DIR="k8s/deploy/${{ vars.STAGE }}"
          COMMIT_SHA="${GITHUB_SHA::7}"

          cd "$OVERLAY_DIR"
          kustomize edit set image \
            $AWS_ECR_URI/placeholder=$AWS_ECR_URI/${{ vars.STAGE }}-$IMAGE_NAME:$COMMIT_SHA


          echo "kustomization.yaml final:"
          cat kustomization.yaml

          cd -  # volta para raiz do repo GitOps
          if ! git diff --quiet -- "$OVERLAY_DIR/kustomization.yaml"; then
            git add "$OVERLAY_DIR/kustomization.yaml"
            git commit -m "Atualiza imagem para $AWS_ECR_URI/${{ vars.STAGE }}-$IMAGE_NAME:$COMMIT_SHA"
            git push origin HEAD:"$BRANCH_NAME"
          else
            echo "Nenhuma mudança detectada em $OVERLAY_DIR/kustomization.yaml"
          fi

      - name: Fazer login e sincronizar com ArgoCD
        run: |
          argocd login "$ARGOCD_SERVER" --insecure --username admin --password "${{ secrets.ARGOCD_TOKEN }}" --grpc-web
          argocd app sync "${{ vars.STAGE }}-${ARGOCD_APP_NAME}" --force --prune --grpc-web
