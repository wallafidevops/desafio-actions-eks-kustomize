name: Deploy no kubernetes 
on: 
  workflow_call:
    inputs:
        environment:
            type: string
            required: true
            description: 'Nome ambiente'

            
jobs:
  deploy:
    name: Deploy no kubernetes
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    env:
      AWS_ECR_URI: 216989136189.dkr.ecr.us-east-1.amazonaws.com
      IMAGE_NAME: review-filmes
      BUILD_ID: ${{ github.run_number }}
      GIT_USER_NAME: wallafidevops
      GIT_USER_EMAIL: wallafisantos55@gmail.com
      ARGOCD_SERVER: argocd.app.wsnobrega.life
      ARGOCD_APP_NAME: review-filmes
      BRANCH_NAME: ${{ github.ref_name }}
    steps:
      - name: Checkout reposit√≥rio atual
        uses: actions/checkout@v4

      - name: Instalar depend√™ncias (yq, argocd, ssh)
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-client curl git yq
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd

      - name: Configurar Git
        run: |
          git config --global user.name "$GIT_USER_NAME"
          git config --global user.email "$GIT_USER_EMAIL"

      - name: Clonar reposit√≥rio GitOps
        run: |
          rm -rf desafio-actions-eks
          git clone https://${{ secrets.GIT_USERNAME }}:${{ secrets.GIT_PASSWORD }}@github.com/wallafidevops/desafio-actions-eks.git
          cd desafio-actions-eks

          git checkout $BRANCH_NAME
          git pull origin $BRANCH_NAME

          # Substituir imagem com sed (express√£o robusta)
          sed -i 's|image: .*review-filmes:.*|image: '"$AWS_ECR_URI/${{ vars.STAGE }}-$IMAGE_NAME:${{ github.run_number }}"'|' ./k8s/deploy/${{ vars.STAGE }}/deployment.yaml

          echo "YAML final:"
          cat ./k8s/deploy/${{ vars.STAGE }}/deployment.yaml

          git add ./k8s/deploy/${{ vars.STAGE }}
          git commit -m "Altera√ß√£o para a imagem 216989136189.dkr.ecr.us-east-1.amazonaws.com/${{ vars.STAGE }}-review-filmes:v${{ github.run_number }}"
          git push origin HEAD:$BRANCH_NAME

      - name: Fazer login e sincronizar com ArgoCD
        run: |
          argocd login $ARGOCD_SERVER --insecure --username admin --password ${{ secrets.ARGOCD_TOKEN }} --grpc-web
          argocd app sync ${{ vars.STAGE }}-$ARGOCD_APP_NAME --force --prune --grpc-web      

# jobs:
#   deploy:
#     name: Deploy no kubernetes
#     environment: ${{ inputs.environment }}
#     runs-on: ubuntu-latest
#     env:
#       AWS_ECR_URI: 216989136189.dkr.ecr.us-east-1.amazonaws.com
#       IMAGE_NAME: review-filmes
#       BUILD_ID: ${{ github.run_number }}
#       GIT_USER_NAME: wallafidevops
#       GIT_USER_EMAIL: wallafisantos55@gmail.com
#       ARGOCD_SERVER: argocd.app.wsnobrega.life
#       ARGOCD_APP_NAME: review-filmes-prod
#       BRANCH_NAME: ${{ github.ref_name }}
#     steps:
#       - name: Checkout reposit√≥rio atual
#         uses: actions/checkout@v4

#       - name: Instalar depend√™ncias (yq, argocd, ssh)
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y openssh-client curl git yq
#           curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
#           chmod +x /usr/local/bin/argocd

#       - name: Configurar Git
#         run: |
#           git config --global user.name "$GIT_USER_NAME"
#           git config --global user.email "$GIT_USER_EMAIL"

#       - name: Clonar reposit√≥rio GitOps e atualizar imagens
#         run: |
#           rm -rf desafio-actions-eks
#           git clone https://${{ secrets.GIT_USERNAME }}:${{ secrets.GIT_PASSWORD }}@github.com/wallafidevops/desafio-actions-eks.git
#           cd desafio-actions-eks

#           git checkout $BRANCH_NAME
#           git pull origin $BRANCH_NAME

#           echo "üîÑ Substituindo imagens em todos os YAMLs de review-filmes..."
#           find ./k8s -name "*.yaml" -exec sed -i "s|image: .*review-filmes:.*|image: $AWS_ECR_URI/$IMAGE_NAME:v${GITHUB_RUN_NUMBER}|" {} \;

#           grep -rn 'review-filmes' ./k8s || true

#           cat ./k8s/deployment.yaml

#           git add ./k8s
#           git commit -m "[skip ci] Atualizando imagem para $AWS_ECR_URI/$IMAGE_NAME:v${GITHUB_RUN_NUMBER}" || echo "Nada para commitar"
#           git push origin HEAD:$BRANCH_NAME

#       - name: Fazer login e sincronizar com ArgoCD
#         run: |
#           argocd login $ARGOCD_SERVER --insecure --username admin --password ${{ secrets.ARGOCD_TOKEN }} --grpc-web
#           argocd app sync $ARGOCD_APP_NAME --force --prune --grpc-web

          
# jobs:
#   deploy:
#     name: Deploy no kubernetes
#     environment: ${{ inputs.environment }}
#     runs-on: ubuntu-latest
#     env:
#       AWS_ECR_URI: 216989136189.dkr.ecr.us-east-1.amazonaws.com
#       IMAGE_NAME: review-filmes
#       BUILD_ID: ${{ github.run_number }}
#       GIT_USER_NAME: wallafidevops
#       GIT_USER_EMAIL: wallafisantos55@gmail.com
#       ARGOCD_SERVER: argocd.app.wsnobrega.life
#       ARGOCD_APP_NAME: filmes-v2
#       BRANCH_NAME: ${{ github.ref_name }}
#     steps:
#       - name: Checkout reposit√≥rio atual
#         uses: actions/checkout@v4

#       - name: Instalar depend√™ncias (yq, argocd, ssh)
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y openssh-client curl git yq
#           curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
#           chmod +x /usr/local/bin/argocd

#       - name: Configurar Git
#         run: |
#           git config --global user.name "$GIT_USER_NAME"
#           git config --global user.email "$GIT_USER_EMAIL"

#       - name: Clonar reposit√≥rio GitOps
#         run: |
#           rm -rf desafio-actions-eks
#           git clone https://${{ secrets.GIT_USERNAME }}:${{ secrets.GIT_PASSWORD }}@github.com/wallafidevops/desafio-actions-eks.git
#           cd desafio-actions-eks

#           git checkout $BRANCH_NAME
#           git pull origin $BRANCH_NAME
#           git fetch --depth=2 origin $BRANCH_NAME

#           # Verifica se h√° mudan√ßas em k8s/
#           if git diff --name-only HEAD^ HEAD | grep -q '^k8s/'; then
#             echo "Altera√ß√µes em k8s detectadas. Continuando..."
#           else
#             echo "Sem altera√ß√µes em k8s. Pulando deploy."
#             exit 0
#           fi

#           # Atualiza imagem com yq
#           export IMAGE_TAG="${AWS_ECR_URI}/${IMAGE_NAME}:${BUILD_ID}"
#           yq -i ".spec.template.spec.containers[0].image = strenv(IMAGE_TAG)" ./k8s/deployment.yaml
#           yq -i ".spec.template.spec.containers[0].imagePullPolicy = \"Always\"" ./k8s/deployment.yaml

#           echo "YAML ap√≥s modifica√ß√£o:"
#           cat ./k8s/deployment.yaml

#           git add ./k8s/
#           git commit -m "[skip ci] Atualizando imagem para $IMAGE_TAG" || echo "Nada para commitar"
#           git push --no-verify origin HEAD:$BRANCH_NAME

#       - name: Fazer login e sincronizar com ArgoCD
#         run: |
#           argocd login $ARGOCD_SERVER --insecure --username admin --password ${{ secrets.ARGOCD_TOKEN }} --grpc-web
#           argocd app sync $ARGOCD_APP_NAME --force --prune --grpc-web


          
    # deploy:
    #     name: Deploy no kubernetes
    #     runs-on: ubuntu-latest
    #     environment:  ${{ inputs.environment }}
    #     steps:
    #         - name: Checkout
    #           uses: actions/checkout@v4
    #         - name: Set up SSH
    #           uses: webfactory/ssh-agent@v0.7.0
    #           with:
    #             ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    #         - name: GitOps - Patch and push
    #           run: |
    #             git config --global user.name "wallafidevops"
    #             git config --global user.email "wallafisantos55@gmail.com"
    #             git remote set-url origin git@github.com/wallafidevops/desafio-actions-eks.git
    #             sed -i 's|image: 216989136189.dkr.ecr.us-east-1.amazonaws.com/review-filmes:v[0-9]\{1,3\}|image: 216989136189.dkr.ecr.us-east-1.amazonaws.com/review-filmes:v${{ github.run_number }}|g' ./k8s/deployment.yaml
    #             git add ./k8s
    #             git commit -m "Altera√ß√£o para a imagem 216989136189.dkr.ecr.us-east-1.amazonaws.com/review-filmes:v${{ github.run_number }}" || echo "Nada para commitar"
    #             git push origin        
